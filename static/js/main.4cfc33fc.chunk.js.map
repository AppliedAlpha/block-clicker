{"version":3,"sources":["custom.js","components/Test.js","components/Game.js","components/App.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","max","val1","val2","Test","setBpc","setBps","onClick","bpc","bps","Game","useState","blocksCount","setBlocksCount","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAqBeA,MAnBf,SAAqBC,EAAUC,GAC3B,IAAMC,EAAgBC,mBAEtBC,qBAAU,WACNF,EAAcG,QAAUL,KAG5BI,qBAAU,WAKN,GAAc,OAAVH,EAAgB,CAChB,IAAIK,EAAKC,aALb,WACIL,EAAcG,YAIaJ,GAC3B,OAAO,kBAAMO,cAAcF,OAEhC,CAACL,KChBFQ,EAAM,SAACC,EAAMC,GAAW,OAAOD,EAAOC,EAAOD,EAAOC,GA6B3CC,EA3BF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAiBnB,OACI,qCACI,wBAAQC,QAlBI,WAChBF,GAAO,SAAAG,GAAG,OAAIA,EAAM,MAiBhB,0BACA,wBAAQD,QAfI,WAChBD,GAAO,SAAAG,GAAG,OAAIA,EAAM,MAchB,0BACA,wBAAQF,QAZI,WAChBF,GAAO,SAAAG,GAAG,OAAIP,EAAIO,EAAM,EAAG,OAWvB,0BACA,wBAAQD,QATI,WAChBD,GAAO,SAAAG,GAAG,OAAIR,EAAIQ,EAAM,EAAG,OAQvB,8BCSGC,EA/BF,WAAO,IAAD,EACuBC,mBAAS,GADhC,mBACRC,EADQ,KACKC,EADL,OAEWF,mBAAS,KAFpB,mBAERlB,EAFQ,aAGOkB,mBAAS,IAHhB,mBAGRH,EAHQ,KAGHH,EAHG,OAIOM,mBAAS,GAJhB,mBAIRF,EAJQ,KAIHH,EAJG,OAKmBK,mBAAS,GAL5B,6BASfpB,GAAY,WACRsB,GAAe,SAAAC,GAAK,OAAIA,EAAQL,OAChCA,EAAM,EAAIhB,EAAQ,MAOtB,OACI,qCACI,8CAAiBmB,KACjB,sBAAML,QAPO,WACjBM,GAAe,SAAAC,GAAK,OAAIA,EAAQN,MAM5B,SACI,2DAEJ,oDAAuBA,KACvB,qDAAwBC,KACxB,cAAC,EAAD,CAAMJ,OAAQA,EAAQC,OAAQA,QCnB3BS,EARH,WACR,OACI,mCACA,cAAC,EAAD,OCFRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.4cfc33fc.chunk.js","sourcesContent":["import {useEffect, useRef} from \"react\";\r\n\r\nfunction useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    });\r\n\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n\r\nexport default useInterval;","import React from \"react\";\r\n\r\nconst max = (val1, val2) => { return val1 > val2 ? val1 : val2 };\r\n\r\nconst Test = ({setBpc, setBps}) => {\r\n    const increaseBpc = () => {\r\n        setBpc(bpc => bpc + 1);\r\n    };\r\n\r\n    const increaseBps = () => {\r\n        setBps(bps => bps + 1);\r\n    };\r\n\r\n    const decreaseBpc = () => {\r\n        setBpc(bpc => max(bpc - 1, 0));\r\n    };\r\n\r\n    const decreaseBps = () => {\r\n        setBps(bps => max(bps - 1, 0));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={increaseBpc}>Increase BPC</button>\r\n            <button onClick={increaseBps}>Increase BPS</button>\r\n            <button onClick={decreaseBpc}>Decrease BPC</button>\r\n            <button onClick={decreaseBps}>Decrease BPS</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Test;","import React, { useState } from \"react\";\r\nimport useInterval from \"custom\";\r\nimport Test from \"components/Test\";\r\n\r\nconst Game = () => {\r\n    const [blocksCount, setBlocksCount] = useState(0);\r\n    const [delay, setDelay] = useState(1000);\r\n    const [bpc, setBpc] = useState(1);\r\n    const [bps, setBps] = useState(0);\r\n    const [blockTier, setBlockTier] = useState(0);\r\n    // const [imgRoute, setImgRoute] = useState(\"imgs/0.png\");\r\n\r\n    // Automatic (Blocks Per Second)\r\n    useInterval(() => {\r\n        setBlocksCount(value => value + bps);\r\n    }, (bps > 0 ? delay : null));\r\n\r\n    // Manual (Blocks Per Click)\r\n    const onBlockClick = () => {\r\n        setBlocksCount(value => value + bpc);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <p>Your Blocks: {blocksCount}</p>\r\n            <span onClick={onBlockClick}>\r\n                <button>I'm A Block Button.</button>\r\n            </span>\r\n            <p>Blocks Per Click : {bpc}</p>\r\n            <p>Blocks Per Second : {bps}</p>\r\n            <Test setBpc={setBpc} setBps={setBps} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Game;","import React from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n        <Game />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"components/App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}